---
title: "h2o-insurance"
author: "Leon Yuan"
format: pdf
editor: visual
---

```{r}
#| output: false
library(tidyverse)
```

```{r}
insurance <- read_csv("./data/insurance.csv")
View(insurance)
```

```{r}
versions::installed.versions("h2o")
```

```{r}
if ("package:h2o" %in% search()) { detach("package:h2o", unload=TRUE) }
if ("h2o" %in% rownames(installed.packages())) { remove.packages("h2o") }
```

```{r}
pkgs <- c("RCurl","jsonlite")
for (pkg in pkgs) {
  if (! (pkg %in% rownames(installed.packages()))) { install.packages(pkg) }
}
```

```{r}
install.packages("h2o", type="source", repos=(c("http://h2o-release.s3.amazonaws.com/h2o/latest_stable_R")))
```

```{r}
library(h2o)
h2o.init()
demo(h2o.kmeans)
```

```{r}
# Import a sample binary outcome train/test set into H2O
train <- h2o.importFile("https://s3.amazonaws.com/erin-data/higgs/higgs_train_10k.csv")
test <- h2o.importFile("https://s3.amazonaws.com/erin-data/higgs/higgs_test_5k.csv")

# Identify predictors and response
y <- "response"
x <- setdiff(names(train), y)

# For binary classification, response should be a factor
train[, y] <- as.factor(train[, y])
test[, y] <- as.factor(test[, y])

# Run AutoML for 20 base models
aml <- h2o.automl(x = x, y = y,
                  training_frame = train,
                  max_models = 20,
                  seed = 1)

# View the AutoML Leaderboard
lb <- aml@leaderboard
print(lb, n = nrow(lb))  # Print all rows instead of default (6 rows)
```

```{r}
#make this example reproducible
set.seed(1)

#use 70% of dataset as training set and 30% as test set
sample <- sample(c(TRUE, FALSE), nrow(insurance), replace=TRUE, prob=c(0.7,0.3))
train  <- insurance[sample, ]
test   <- insurance[!sample, ]

train <- write.csv(train, file = "train.csv")
test <- write.csv(test, file = "test.csv")
```

```{r}
# Import a sample binary outcome train/test set into H2O
train <- h2o.importFile("train.csv")
test <- h2o.importFile("test.csv")

# Identify predictors and response
y <- "charges"
x <- setdiff(names(train), y)

# For binary classification, response should be a factor
char <- c('sex', 'smoker', 'region')
for(i in char){
  train[, i] <- as.factor(train[, i])
  test[, i] <- as.factor(test[, i])
}

# Run AutoML for 20 base models
aml <- h2o.automl(x = x, y = y,
                  training_frame = train,
                  max_models = 30,
                  seed = 2)

# View the AutoML Leaderboard
lb <- aml@leaderboard
print(lb, n = nrow(lb))  # Print all rows instead of default (6 rows)
```

```{r}
pred <- h2o.predict(aml, test)
pred
```

```{r}
# Get leaderboard with all possible columns
lb <- h2o.get_leaderboard(object = aml, extra_columns = "ALL")
lb
```

```{r}
# this is equivalent to
m <- h2o.get_best_model(aml)
m
```
